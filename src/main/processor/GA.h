using namespace std;
class TMASInformation;
class Evaluator;
class Task;
class GA {
 public:
	GA(int,int,TMASInformation);
	void calculationFitness();
	int run();
	void initialGroup();
	void selection();
	void crossover();
	void mutation();
	void put(int *,int, bool *,int &);
	void crossoverOperator(int *,int *,int *,int *,int *,int *);
 private:
	double _mutationRate;
	double _crossoverRate;
	double * _groupFitness;
	int ** _schedulingGroup;
	int ** _mappingGroup;
	int ** _crossoverSchedulingGroup;
	int ** _crossoverMappingGroup;
	int ** _mutationSchedulingGroup;
	int ** _mutationMappingGroup;
	int ** _selectionSchedulingGroup;
	int ** _selectionMappingGroup;
	int * _crossoverSchedulingString;
	int * _crossoverMappingString;
	int _selectionGroupSize;;
	int _maxGeneration;
	int _groupSize;
	TMASInformation *_jobsInformation;
	Evaluator * _evaluator;
	Task *_tasks;
	int *_allFitness;
	int _tCount;
	int _pCount;
	int _count;
	int _crossoverSize;
	int _mutationSize;
};
